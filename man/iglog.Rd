% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{iglog}
\alias{iglog}
\title{Integrative generalized linear model constraint on hierarchical structure
by using overlapped group penalty}
\usage{
iglog(y1, x1, y2, x2, g, v, hierarchy, lambda, type = "lm", rho = 0.001,
  scale = TRUE, eabs = 0.001, erel = 0.001, LL = 100, eta = 1.25,
  maxitr = 500L)
}
\arguments{
\item{y1}{a survival object contains the survival time and censoring status 
from data1. See \code{\link[survival]{Surv}}.}

\item{x1}{the design matrix of n by p from data1.}

\item{y2}{a survival object contains the survival time and censoring status 
from data2. See \code{\link[survival]{Surv}}.}

\item{x2}{the design matrix of n by p from data2. x1 and x2 should have 
the same number of columns.}

\item{g}{a vector of group labels for the p predictor variables.}

\item{v}{a vector of 0 and 1 for the penalization status of the 
p predictor variables. 1 is for penalization and 0 for 
not penalization.}

\item{hierarchy}{hierarchy indicator. 0 for L2 penalty, 1 for the
composite L2 penalty, and 2 for the composite L2 
and ridge penalty for each group, respectively.}

\item{lambda}{penalty parameters, should correspond to the hierarchy
status.}

\item{type}{character variable, for different linear models based
on the response variable. For continuous response variable,
type is set ``lm''; for multinomial or binary response 
variable, type is set ``binomial''; for survival response 
variable, type is set ``survival'', respectively.}

\item{rho}{The penalty parameter in the ADMM algorithm. Default is 1e-3.}

\item{scale}{Whether or not scale the design matrix. Default is true.}

\item{eabs}{The absolute tolerance in the ADMM algorithm. Default is 1e-3.}

\item{erel}{The reletive tolerance in the ADMM algorithm. Default is 1e-3.}

\item{LL}{Initial value for the coefficient of the second-order term in 
the Majorization-Minimization step.}

\item{eta}{gradient step in the FISTA algorithm.}

\item{maxitr}{The maximum iterations in the ADMM algorithm. Default is 500.}
}
\description{
Integrative generalized linear model constraint on hierarchical structure
by using overlapped group penalty
}
\examples{

require(coxed)
n=50;p=1000
set.seed(2018)
# generate two design matrices x1 and x2
s=10
x1=matrix(0,n,1+2*p)
x1[,1]=sample(c(0,1),n,replace = TRUE)
x1[,seq(2,1+2*p,2)]=matrix(rnorm(n*p),n,p)
x1[,seq(3,1+2*p,2)]=x1[,seq(2,1+2*p,2)]*x1[,1]

x2=matrix(0,n,1+2*p)
x2[,1]=x1[,1]
x2[,seq(2,1+2*p,2)]=matrix(rnorm(n*p),n,p)
x2[,seq(3,1+2*p,2)]=x2[,seq(2,1+2*p,2)]*x2[,1] 

# generate beta1 and beta2 
beta1=beta2=c(rnorm(13,0,2),rep(0,ncol(x1)-13))
beta2[1:13]=beta2[1:13]+rnorm(13,0,0.1)
beta1[c(2,4,7,9)]=beta2[c(2,4,7,9)]=0

# generate two continuous y1 and y2
ldata1=x1\%*\%beta1
noise1=rnorm(n)
snr1=as.numeric(sqrt(var(ldata1)/(s*var(noise1))))
ly1=ldata1+snr1*noise1

ldata2=x2\%*\%beta2
noise2=rnorm(n)
snr2=as.numeric(sqrt(var(ldata2)/(s*var(noise1))))
ly2=ldata2+snr2*noise2 

g=c(p+1,rep(1:p,rep(2,p)))
v=c(0,rep(1,2*p))
\dontrun{
ilfit1=iglog(y1=as.matrix(ly1),x1=as.matrix(x1),
             y2=as.matrix(ly2),x2=as.matrix(x2),
             g=g,v=v,hierarchy=1,lambda=c(0.01,0.001),
             type="lm")
}

## generate two binomial data 
prob1=exp(as.matrix(x1)\%*\%as.matrix(beta1))/(1+exp(as.matrix(x1)\%*\%as.matrix(beta1)))
cy1=ifelse(prob1<0.5,0,1)

prob2=exp(as.matrix(x2)\%*\%as.matrix(beta2))/(1+exp(as.matrix(x2)\%*\%as.matrix(beta2)))
cy2=ifelse(prob2<0.5,0,1)

\dontrun{
ilfit2=iglog(y1=as.matrix(cy1),x1=as.matrix(x1),
             y2=as.matrix(cy2),x2=as.matrix(x2),
             g=g,v=v,hierarchy=1,lambda=c(0.025,0.001),
             type="binomial")
}

## generate two survival data 
sdata1=sim.survdata(N=n,T=100,X=x1,beta=beta1)
sy1=sdata1$data[,c("y","failed")]
sy1$failed=ifelse(sy1$failed,1,0)

sdata2=sim.survdata(N=n,T=100,X=x2,beta=beta2)
sy2=sdata2$data[,c("y","failed")]
sy2$failed=ifelse(sy2$failed,1,0)

\dontrun{
ilfit3=iglog(y1=as.matrix(sy1),x1=as.matrix(x1),
             y2=as.matrix(sy2),x2=as.matrix(x2),
             g=g,v=v,hierarchy=1,lambda=c(0.075,0.001),
             type="survival")
}

}
